(self.webpackChunk=self.webpackChunk||[]).push([[296],{370:e=>{"use strict";e.exports=function(e,s){return s||(s={}),e?(e=String(e.__esModule?e.default:e),s.hash&&(e+=s.hash),s.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},87:(e,s,a)=>{"use strict";e.exports=a.p+"assets/a877d4b35433ccbd0175.jpg"},871:(e,s,a)=>{"use strict";e.exports=a.p+"assets/ab86fc361744fa723e17.jpg"},631:(e,s,a)=>{"use strict";e.exports=a.p+"assets/ee07df59ceb7b1890977.jpg"},126:(e,s,a)=>{"use strict";e.exports=a.p+"assets/de1bdc25a3e5ec5d14c0.jpg"},636:(e,s,a)=>{"use strict";e.exports=a.p+"assets/426f29399361d697842e.jpg"},734:(e,s,a)=>{"use strict";e.exports=a.p+"assets/0b0d0bb5360f9ebe8461.jpg"},903:(e,s,a)=>{"use strict";var t=a(370),i=a.n(t),n=new URL(a(631),a.b),c=new URL(a(87),a.b),r=new URL(a(871),a.b);const l='<div class="slider"> <div class="slider__viewport"> <div class="slider__holder"> <div class="slider__item"> <a href="#"><img width="1360" height="410" src="'+i()(n)+'" alt=""/></a> </div> <div class="slider__item"> <a href="#"><img width="1360" height="410" src="'+i()(c)+'" alt=""/></a> </div> <div class="slider__item"> <a href="#"><img width="1360" height="410" src="'+i()(r)+'" alt=""/></a> </div> </div> </div> <div class="slider__controls"></div> </div>';var d=new URL(a(734),a.b),o=new URL(a(636),a.b),_=new URL(a(126),a.b),u=i()(d),m=i()(o);const h='<div class="ticker"> <div class="ticker__viewport"> <a href="" class="ticker__item"> <img src="'+u+'" width="576" alt=""> </a> <a href="" class="ticker__item"> <img src="'+m+'" width="576" alt=""> </a> <a href="" class="ticker__item"> <img src="'+i()(_)+'" width="576" alt=""> </a> <a href="" class="ticker__item"> <img src="'+m+'" width="576" alt=""> </a> </div> <div class="ticker__hide">Ã—</div> </div>';a(427),a(964),a(580);const v=['<div class="header"> <div class="header__indent"> <div class="logo"> <a href="#"></a> </div> <div class="menu"> <ul class="menu__main"> <li class="menu__main-item menu__main-item_active"><a href="#">Catalog</a></li> <li class="menu__main-item"><a href="#">Discount</a></li> <li class="menu__main-item"><a href="#">Server Configurator</a></li> <li class="menu__main-item dropdown"><a href="#">Orders</a> <ul class="menu__sub dropdown-sub"> <li class="menu__sub-item"><a href="#">Order&nbsp;History</a></li> <li class="menu__sub-item"><a href="#">Invoices</a></li> </ul> </li> <li class="menu__main-item dropdown"><a href="#">Info</a> <ul class="menu__sub dropdown-sub"> <li class="menu__sub-item"><a href="#">Contacts</a></li> <li class="menu__sub-item"><a href="#">Service</a></li> <li class="menu__sub-item"><a href="#">Documents</a></li> <li class="menu__sub-item"><a href="#">News and Sales</a></li> <li class="menu__sub-item"><a href="#">Help</a></li> </ul> </li> <li class="menu__main-item dropdown"><a href="#">Admin Section</a> <ul class="menu__sub dropdown-sub"> <li class="menu__sub-item"><a href="#">Moderate&nbsp;users</a></li> <li class="menu__sub-item"><a href="#">Chat&nbsp;history</a></li> <li class="menu__sub-item"><a href="#">Order&nbsp;statistics</a></li> </ul> </li> </ul> </div> <div class="account dropdown"> <div class="account__name">Jhon Doe</div> <div class="account__icon"></div> <div class="account__info dropdown-sub"> <div class="account__company">Jhon\'s Company Name</div> <div class="account__manager"> <p class="account__manager-title">Personal Manager</p> <p class="account__manager-info account__manager-info_name">Alex Fisher</p> <p class="account__manager-info account__manager-info_phone">+375 44 000-00-00</p> <p class="account__manager-info account__manager-info_mail">a.fisher@example.com</p> <p class="account__manager-info account__manager-info_skype">a.fisher</p> </div> <div class="account__link"> <a href="#">Personal Account</a> </div> <div class="account__link"> <a href="#">Log Out</a> </div> </div> </div> </div> </div>',l,h];document.getElementById("root").innerHTML=v.join("")},427:()=>{document.addEventListener("DOMContentLoaded",(()=>{document.querySelectorAll(".dropdown").forEach((e=>{e.addEventListener("mouseenter",(s=>{e.querySelector(".dropdown-sub").classList.add("dropdown-sub_show")})),e.addEventListener("mouseleave",(s=>{e.querySelector(".dropdown-sub").classList.remove("dropdown-sub_show")}))}))}))},964:()=>{document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector(".slider__holder"),s=document.querySelectorAll(".slider__item"),a=document.querySelector(".slider__controls");s.forEach((e=>{const s=document.createElement("div");s.classList.add("slider__control"),a.appendChild(s)})),a.firstElementChild.classList.add("slider__control_active"),a.addEventListener("click",(s=>{if(s.target!==s.currentTarget){const a=s.target.parentNode,t=[...a.children].indexOf(s.target);e.style.transform=`translate(${-100*t}%)`,[...a.children].forEach((e=>{e.classList.remove("slider__control_active")})),s.target.classList.add("slider__control_active")}})),setInterval((()=>{const s=[...a.children],t=document.querySelector(".slider__control_active"),i=s.indexOf(t)+1==s.length?0:s.indexOf(t)+1;s.forEach((e=>{e.classList.remove("slider__control_active")})),s[i].classList.add("slider__control_active"),e.style.transform=`translate(${-100*i}%)`}),8e3)}))},580:()=>{document.addEventListener("DOMContentLoaded",(()=>{!function e(){const s=document.querySelector(".ticker__viewport"),a=s.firstElementChild,t=a.offsetWidth,i=a.cloneNode(!0);s.append(i),a.style.marginLeft=`-${t}px`,a.addEventListener("transitionend",(function(s){a.remove(),e()}))}(),document.querySelector(".ticker__hide").addEventListener("click",(e=>{e.target.parentNode.style.display="none"}))}))}},e=>{"use strict";e(e.s=903)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,